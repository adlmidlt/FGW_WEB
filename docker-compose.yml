services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: app_fgw_web
    ports:
      - "7878:7878"
    environment:
      - ENV=${APP_ENV}
      - DATABASE_URL=postgres://${DB_USER}:${DB_PASS}@${DB_HOST}:${DB_PORT}/${DB_NAME}
    env_file:
      - .env
    depends_on:
      - postgresql
    restart: unless-stopped
    networks:
      - app-network

  postgresql:
    image: postgres:15-alpine
    container_name: postgresql_data
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    restart: unless-stopped
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge